datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum USerRole {
  ADMIN
  USER
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  username      String?     @unique @db.VarChar(15)
  email         String?     @unique
  emailVerified DateTime?
  password      String?
  role          USerRole    @default(USER)
  image         String?
  accounts      Account[]
  sessions      Session[]
  bio           String?     @db.Text
  urls          SocialUrl[]
}

model SocialUrl {
  id     String     @id @default(cuid())
  name   String
  type   SocialType
  User   User?      @relation(fields: [userId], references: [id])
  userId String?
}

enum SocialType {
  Twitter
  LinkedIn
  Github
  Youtube
  Medium
  Website
}

model VerificationToken {
  identifier String   @id @default(cuid())
  email      String
  token      String   @unique
  expires    DateTime

  @@unique([email, token])
}